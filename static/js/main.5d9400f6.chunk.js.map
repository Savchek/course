{"version":3,"sources":["icons/cross.svg","icons/cycle.svg","components/List/ListTasks.jsx","components/List/AddTask.jsx","components/List/List.jsx","components/SalaryCalc/SalaryCalc.jsx","components/DatePicker/DatePicker.jsx","components/Main/Main.jsx","index.js"],"names":["module","exports","ListItem","item","taskDelete","taskDone","useState","duration","setDuration","taskTimer","useRef","progressDuration","useCallback","timeStyle","value","toString","length","parsedStartTime","startTime","split","map","e","dateNow","Date","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","h","m","s","useEffect","done","id","setInterval","current","clearInterval","formatTime","t","substring","className","title","endTime","onClick","src","cross","alt","AddItem","chosenDate","taskAdd","createId","setTitle","setStartTime","momental","setMomental","cycle","type","onChange","target","placeholder","preventDefault","toISOString","slice","alert","trim","sTime","createDate","timeArr","parsedTimeArr","parseTime","sDate","startDate","startDuration","nDate","newTask","date","List","tasks","setTasks","taskInProcess","setTaskInProcess","a","localTasks","localStorage","getItem","JSON","parse","parsedTasks","forEach","pullTasks","tasksSave","newTasks","stringList","stringify","setItem","filteredList","filter","AddTask","newItem","Math","random","replace","find","upToDateTasks","key","tasksList","SalaryCalc","close","dateModes","salaryRate","setSalaryRate","dateMode","setDateMode","setStartDate","endDate","setEndDate","calculatedSalary","setCalculatedSalary","updateDateMode","changeStartDate","changeEndDate","Object","keys","htmlFor","name","checked","nSalatyRate","isNaN","hours","minutes","addTime","parsedDuration","pickedMonth","getMonth","parseDate","parsedDate","year","month","day","sd","ed","td","floor","Popup","setChosenDate","newDate","App","salaryCalcState","setSalaryCalcState","updateSalaryCalcState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d9400f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cross.7d1873ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/cycle.75a90539.svg\";","import React, { useState, useEffect, useCallback, useRef } from 'react'\r\nimport cross from '../../icons/cross.svg'\r\n\r\nconst ListItem = ({ item, taskDelete, taskDone }) => {\r\n\r\n\tconst [duration, setDuration] = useState('00:00:00')\r\n\tconst taskTimer = useRef()\r\n\r\n\t// Лічильник активної задачі\r\n\tconst progressDuration = useCallback(() => {\r\n\t\tconst timeStyle = value => value.toString().length < 2 ? '0' + value : value\r\n\t\tconst parsedStartTime = item.startTime.split(':').map(e => +e)\r\n\r\n\t\tconst dateNow = new Date()\r\n\r\n\t\tdateNow.setHours(dateNow.getHours() - parsedStartTime[0])\r\n\t\tdateNow.setMinutes(dateNow.getMinutes() - parsedStartTime[1])\r\n\t\tdateNow.setSeconds(dateNow.getSeconds() - (parsedStartTime[2] - 1))\r\n\r\n\t\tconst h = timeStyle(dateNow.getHours())\r\n\t\tconst m = timeStyle(dateNow.getMinutes())\r\n\t\tconst s = timeStyle(dateNow.getSeconds())\r\n\r\n\t\tsetDuration(h + ':' + m + ':' + s)\r\n\t}, [item])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!item.done) {\r\n\t\t\tprogressDuration()\r\n\t\t\t// Встановлення лічильника\r\n\t\t\tconst id = setInterval(progressDuration, 1000)\r\n\t\t\ttaskTimer.current = id\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tclearInterval(taskTimer.current)\r\n\t\t}\r\n\r\n\t}, [item, progressDuration])\r\n\r\n\tconst completeTask = () => {\r\n\t\tsetDuration('00:00:00')\r\n\t\tclearInterval(taskTimer.current)\r\n\t\ttaskDone(item.id, duration)\r\n\t}\r\n\r\n\t// Форматування часу\r\n\tconst formatTime = t => t.substring(0, 5) === '00:00' ? t : t.substring(0, 5)\r\n\r\n\r\n\treturn (\r\n\t\t<li className='task-list-item'>\r\n\t\t\t<div className='task-title'>\r\n\t\t\t\t<p>{item.title}</p>\r\n\t\t\t</div>\r\n\t\t\t<div className='task-info'>\r\n\t\t\t\t<div className='task-info-item'><p>Початок:</p><p>{formatTime(item.startTime)}</p></div>\r\n\r\n\t\t\t\t{item.done && <div className='task-info-item'>\r\n\t\t\t\t\t<p>Закінчення:</p>\r\n\t\t\t\t\t<p>{formatTime(item.endTime)}</p>\r\n\t\t\t\t</div>}\r\n\r\n\t\t\t\t{item.done && <div className='task-info-item'>\r\n\t\t\t\t\t<p>Тривалість:</p>\r\n\t\t\t\t\t<p>{formatTime(item.duration)}</p>\r\n\t\t\t\t</div>}\r\n\r\n\t\t\t\t{!item.done && <p className='task-duration'>{duration}</p>}\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='task-delete'>\r\n\t\t\t\t{\r\n\t\t\t\t\t// Показувати кнопку \"Видалити\" можна тільки якщо завдання виконано\r\n\t\t\t\t\titem.done ? <button className='delete-task' onClick={() => taskDelete(item.id)}><img src={cross} alt='' /></button>\r\n\t\t\t\t\t\t: <button onClick={completeTask}>Виконано</button>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default ListItem\r\n","import React, { useState } from 'react'\r\nimport './List.css'\r\nimport cycle from '../../icons/cycle.svg'\r\n\r\nconst AddItem = ({ chosenDate, taskAdd, createId }) => {\r\n\r\n\tconst [title, setTitle] = useState('')\r\n\tconst [startTime, setStartTime] = useState('08:30:00')\r\n\tconst [duration, setDuration] = useState('00:00:00')\r\n\tconst [momental, setMomental] = useState(true)\r\n\r\n\tconst updateTitle = e => setTitle(e.target.value)\r\n\tconst updateStartTime = e => setStartTime(e.target.value)\r\n\tconst updateDuration = e => setDuration(e.target.value)\r\n\tconst switchMomental = () => setMomental(!momental)\r\n\r\n\tconst processAddnig = e => {\r\n\t\t// Заборона перезавантаження сторінки\r\n\t\te.preventDefault()\r\n\r\n\t\tif (chosenDate !== new Date().toISOString().slice(0, 10) && !momental) {\r\n\t\t\talert('Задачі типу \"з відліком\" можна створювати лише в сьогоднішній даті')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (duration === '' || startTime === '' || (momental && duration === '00:00:00')) {\r\n\t\t\talert('Час не може бути нульовим')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tlet t = title\r\n\t\t// Видалення всіх зайвих пропусків в заголовку\r\n\t\tt.trim()\r\n\r\n\t\tif (!t) {\r\n\t\t\talert('Назва задачі не може бути пустою')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst timeStyle = value => value.toString().length < 2 ? '0' + value : value\r\n\r\n\t\tlet sTime = startTime\r\n\t\tlet endTime = ''\r\n\r\n\t\tif (momental) {\r\n\t\t\tconst parseTime = t => t.split(':').map(e => +e)\r\n\r\n\t\t\tconst createDate = timeArr => {\r\n\t\t\t\tconst parsedTimeArr = parseTime(timeArr)\r\n\t\t\t\tconst sDate = new Date()\r\n\t\t\t\tsDate.setHours(parsedTimeArr[0] || 0)\r\n\t\t\t\tsDate.setMinutes(parsedTimeArr[1] || 0)\r\n\t\t\t\tsDate.setSeconds(parsedTimeArr[2] || 0)\r\n\t\t\t\treturn sDate\r\n\t\t\t}\r\n\r\n\t\t\t// Створення об'єктів дати для спрощення обрахунків\r\n\t\t\tconst startDate = createDate(startTime)\r\n\t\t\tconst startDuration = createDate(duration)\r\n\r\n\t\t\t// (час початку) + (тривалість) \r\n\t\t\tstartDate.setHours(startDate.getHours() + startDuration.getHours())\r\n\t\t\tstartDate.setMinutes(startDate.getMinutes() + startDuration.getMinutes())\r\n\t\t\tstartDate.setSeconds(startDate.getSeconds() + startDuration.getSeconds())\r\n\r\n\t\t\t// Отримання числових значень кінцевого часу\r\n\t\t\tconst h = timeStyle(startDate.getHours())\r\n\t\t\tconst m = timeStyle(startDate.getMinutes())\r\n\t\t\tconst s = timeStyle(startDate.getMinutes())\r\n\r\n\t\t\tendTime = h + ':' + m + ':' + s\r\n\r\n\t\t} else {\r\n\t\t\tconst nDate = new Date()\r\n\t\t\tsTime = timeStyle(nDate.getHours()) + ':' +\r\n\t\t\t\ttimeStyle(nDate.getMinutes()) + ':' +\r\n\t\t\t\ttimeStyle(nDate.getSeconds())\r\n\t\t}\r\n\r\n\t\tconst newTask = {\r\n\t\t\tid: createId(),\r\n\t\t\ttitle: t,\r\n\t\t\tdate: chosenDate,\r\n\t\t\tstartTime: sTime,\r\n\t\t\tendTime,\r\n\t\t\tduration,\r\n\t\t\tdone: momental,\r\n\t\t\ttype: momental ? 'momental' : 'withTimer'\r\n\t\t}\r\n\r\n\t\ttaskAdd(newTask)\r\n\r\n\t\tsetTitle('')\r\n\t\tsetDuration('00:00:00')\r\n\t\tsetStartTime('08:30:00')\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className='addTask-wrap'>\r\n\t\t\t<form>\r\n\t\t\t\t<div className='task-create-type-choise'>\r\n\t\t\t\t\t<p>Тип створення задачі: </p>\r\n\t\t\t\t\t<p className='btn' onClick={switchMomental}>\r\n\t\t\t\t\t\t{momental ? 'моментальний' : 'з відліком'}\r\n\t\t\t\t\t\t<img src={cycle} alt='' />\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\t// Показувати наступний блок тільки якщо тип задачі \"моментальний\"\r\n\t\t\t\t\tmomental &&\r\n\t\t\t\t\t<div className='task-create-time'>\r\n\t\t\t\t\t\t<p>Початок: </p>\r\n\t\t\t\t\t\t<input type='time' value={startTime} onChange={updateStartTime} />\r\n\t\t\t\t\t\t<p>Тривалість: </p>\r\n\t\t\t\t\t\t<input type='time' value={duration} onChange={updateDuration} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tclassName='task-create-title'\r\n\t\t\t\t\tvalue={title}\r\n\t\t\t\t\tonChange={updateTitle}\r\n\t\t\t\t\tplaceholder='Назва задачі'\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<button className='task-create-btn' onClick={processAddnig}>Створити</button>\r\n\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AddItem\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport ListItem from './ListTasks'\r\nimport AddTask from './AddTask'\r\n\r\nconst List = ({ tasks, setTasks, chosenDate }) => {\r\n\tconst [taskInProcess, setTaskInProcess] = useState('')\r\n\r\n\tuseEffect(() => {\r\n\t\t// Отримання даних с локального сховища браузера\r\n\t\tconst pullTasks = async () => {\r\n\t\t\tconst localTasks = localStorage.getItem('workTasks')\r\n\t\t\tif (localTasks) {\r\n\t\t\t\tconst parsedTasks = await JSON.parse(localTasks)\r\n\t\t\t\tsetTasks(parsedTasks)\r\n\t\t\t\tparsedTasks.forEach(e => {\r\n\t\t\t\t\tif (!e.done) setTaskInProcess(e.id)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpullTasks()\r\n\r\n\t}, [setTasks])\r\n\r\n\tconst createId = () => {\r\n\t\tlet id = Math.random().toString().replace('.', '')\r\n\t\t// Перевірка щоб впевнитись що створений id не співпадав з уже існуючими\r\n\t\tif (tasks.find(e => e.id === id))\r\n\t\t\tcreateId()\r\n\t\telse return id\r\n\t}\r\n\r\n\tconst tasksSave = newTasks => {\r\n\t\tsetTasks(newTasks)\r\n\t\tconst stringList = JSON.stringify(newTasks)\r\n\t\tlocalStorage.setItem('workTasks', stringList)\r\n\t}\r\n\r\n\tconst taskAdd = newItem => {\r\n\t\tif (!newItem.done) setTaskInProcess(newItem.id)\r\n\t\tconst newTasks = [newItem, ...tasks]\r\n\t\ttasksSave(newTasks)\r\n\t}\r\n\r\n\tconst taskDelete = id => {\r\n\t\t// Створення нового списку без видаленого елементу\r\n\t\tconst filteredList = tasks.filter(e => e.id !== id)\r\n\t\ttasksSave(filteredList)\r\n\t}\r\n\r\n\tconst taskDone = (id, duration) => {\r\n\t\tlet endTime = new Date()\r\n\r\n\t\tconst timeStyle = value => value.toString().length < 2 ? '0' + value : value\r\n\r\n\t\tlet h = timeStyle(endTime.getHours())\r\n\t\tlet m = timeStyle(endTime.getMinutes())\r\n\t\tlet s = timeStyle(endTime.getSeconds())\r\n\r\n\t\tconst newTasks = tasks.map(e =>\r\n\t\t\te.id === id ?\r\n\t\t\t\t{\r\n\t\t\t\t\t...e,\r\n\t\t\t\t\tduration,\r\n\t\t\t\t\tdone: true,\r\n\t\t\t\t\tendTime: h + ':' + m + ':' + s\r\n\t\t\t\t} : e\r\n\t\t)\r\n\r\n\t\tsetTaskInProcess('')\r\n\t\ttasksSave(newTasks)\r\n\t}\r\n\r\n\t// Список задач для відображення\r\n\tconst tasksList = () => {\r\n\t\tconst upToDateTasks = tasks.filter(e => e.date === chosenDate)\r\n\t\treturn upToDateTasks.length > 0 ? (\r\n\t\t\t<ul className='task-list'>\r\n\t\t\t\t{upToDateTasks.map(e => (\r\n\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\tkey={e.id}\r\n\t\t\t\t\t\titem={e}\r\n\t\t\t\t\t\ttaskDelete={taskDelete}\r\n\t\t\t\t\t\ttaskDone={taskDone}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t) : <h1>Порожньо</h1>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='task-list-wrap'>\r\n\t\t\t{\r\n\t\t\t\t(taskInProcess === '') && <AddTask chosenDate={chosenDate} taskAdd={taskAdd} createId={createId} />\r\n\t\t\t}\r\n\r\n\t\t\t{tasksList()}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default List\r\n","import React, { useState } from 'react'\r\nimport './SalaryCalc.css'\r\nimport cross from '../../icons/cross.svg'\r\n\r\nconst SalaryCalc = ({ tasks, close }) => {\r\n\r\n\tconst dateModes = {\r\n\t\t'currentMonth': 'За поточний місяць',\r\n\t\t'previousMonth': 'За попередній місяць',\r\n\t\t'pickRange': 'Вибрати проміжок'\r\n\t}\r\n\r\n\tconst [salaryRate, setSalaryRate] = useState(0)\r\n\tconst [dateMode, setDateMode] = useState('currentMonth')\r\n\r\n\tconst [startDate, setStartDate] = useState('')\r\n\tconst [endDate, setEndDate] = useState('')\r\n\tconst [calculatedSalary, setCalculatedSalary] = useState(-1)\r\n\r\n\tconst updateDateMode = e => setDateMode(e.target.id)\r\n\tconst updateSalaryRate = e => setSalaryRate(e.target.value)\r\n\tconst changeStartDate = e => setStartDate(new Date(e.target.value).toISOString().slice(0, 10))\r\n\tconst changeEndDate = e => setEndDate(new Date(e.target.value).toISOString().slice(0, 10))\r\n\r\n\tconst calculateSalary = e => {\r\n\t\te.preventDefault()\r\n\t\tsetCalculatedSalary(-1)\r\n\t\tconst nSalatyRate = salaryRate.toString().replace(',', '.')\r\n\r\n\t\tif (!nSalatyRate || (isNaN(+nSalatyRate)) || nSalatyRate < 0) {\r\n\t\t\talert('Введіть коректну ставку')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (tasks.length === 0) {\r\n\t\t\talert('Список задач пустий')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tlet hours = 0, minutes = 0\r\n\r\n\t\tconst addTime = duration => {\r\n\t\t\tconst parsedDuration = duration.split(':').map(e => +e)\r\n\t\t\thours += parsedDuration[0]\r\n\t\t\tminutes += parsedDuration[1]\r\n\t\t}\r\n\t\tif (dateMode === 'currentMonth' || dateMode === 'previousMonth') {\r\n\t\t\tconst pickedMonth = new Date().getMonth() + (dateMode === 'currentMonth' ? 1 : 0)\r\n\t\t\ttasks.forEach(e => {\r\n\t\t\t\t// Отримання місяця задачі та переробка його в числовий формат\r\n\t\t\t\tconst month = +e.date.split('-')[1]\r\n\t\t\t\tif (month === pickedMonth) {\r\n\t\t\t\t\taddTime(e.duration)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t} else if (dateMode === 'pickRange') {\r\n\t\t\tif (startDate === '' || endDate === '') {\r\n\t\t\t\talert('Вкажіть початкову та кінцеву дати')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\t// Перетворення дати із рядка в об'єкт\r\n\t\t\tconst parseDate = date => {\r\n\t\t\t\tconst parsedDate = date.split('-').map(e => +e)\r\n\t\t\t\tconst year = parsedDate[0]\r\n\t\t\t\tconst month = parsedDate[1]\r\n\t\t\t\tconst day = parsedDate[2]\r\n\t\t\t\treturn new Date(year, month, day)\r\n\t\t\t}\r\n\t\t\t// startDate - початкова границя дати\r\n\t\t\tconst sd = parseDate(startDate)\r\n\t\t\t// endDate - кінцева границя дати\r\n\t\t\tconst ed = parseDate(endDate)\r\n\r\n\t\t\tif (sd > ed) {\r\n\t\t\t\talert('Кінцева дата не може бути меншою за початкову')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\ttasks.forEach(e => {\r\n\t\t\t\t// taskDate - дата задачі\r\n\t\t\t\tconst td = parseDate(e.date)\r\n\t\t\t\tif (td <= ed && td >= sd) addTime(e.duration)\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\talert('Помилка у обраному типі розрахунку')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\thours += Math.floor(minutes / 60)\r\n\t\tif (minutes % 60 >= 30) hours++\r\n\r\n\t\tsetCalculatedSalary(hours * nSalatyRate)\r\n\t}\r\n\r\n\tconst handleClosing = e => {\r\n\t\tif (e.target.className === 'salary-calc-wrap')\r\n\t\t\tclose()\r\n\t}\r\n\r\n\r\n\tconst createDateModes = () => Object.keys(dateModes).map(e =>\r\n\t\t(\r\n\t\t\t<div key={e} className='salary-calc-option'>\r\n\t\t\t\t<label htmlFor={e}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid={e}\r\n\t\t\t\t\t\tname='dateMode'\r\n\t\t\t\t\t\tchecked={dateMode === e}\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tonChange={updateDateMode}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p>{dateModes[e]}</p>\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t)\r\n\t)\r\n\r\n\tconst rangeSelector = () => {\r\n\t\treturn (<div className='salary-calc-date-range-wrap'>\r\n\t\t\t<div className='salary-calc-date'>\r\n\t\t\t\t<p>З:</p>\r\n\t\t\t\t<input type=\"date\" name=\"startDate\" id=\"startDate\" value={startDate} onChange={changeStartDate} />\r\n\t\t\t</div>\r\n\t\t\t<div className='salary-calc-date'>\r\n\t\t\t\t<p>По:</p>\r\n\t\t\t\t<input type=\"date\" name=\"endDate\" id=\"endDate\" value={endDate} onChange={changeEndDate} />\r\n\t\t\t</div>\r\n\t\t</div>)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div onClick={handleClosing} className='salary-calc-wrap'>\r\n\t\t\t<form className='salary-calc-form' >\r\n\t\t\t\t<div className='salary-calc-close-btn'>\r\n\t\t\t\t\t<img src={cross} onClick={close} alt='' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='salary-rate-wrap'>\r\n\t\t\t\t\t<p>Ставка:</p>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={salaryRate}\r\n\t\t\t\t\t\tonChange={updateSalaryRate}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p> грн/год</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t{createDateModes()}\r\n\t\t\t\t{dateMode === 'pickRange' && rangeSelector()}\r\n\t\t\t\t<button className='salary-calc-btn' onClick={calculateSalary}>Розрахувати</button>\r\n\t\t\t\t{calculatedSalary !== -1 && <p className='salary-calc-result'> Результат: {calculatedSalary} грн</p>}\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SalaryCalc","import React from 'react'\r\nimport './DatePicker.css'\r\n\r\nconst Popup = ({ chosenDate, setChosenDate }) => {\r\n\r\n\tconst changeDate = e => {\r\n\t\tconst newDate = e.target.value ? new Date(e.target.value) : new Date()\r\n\t\tsetChosenDate(newDate.toISOString().slice(0, 10))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='datePicker'>\r\n\t\t\t<label className='datePicker-label' htmlFor=\"datePicker\">\r\n\t\t\t\t<input type=\"date\" id=\"datePicker\" value={chosenDate} onChange={changeDate} />\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Popup","import React, { useState } from 'react'\nimport List from '../List/List'\nimport SalaryCalc from '../SalaryCalc/SalaryCalc'\nimport DatePicker from '../DatePicker/DatePicker'\nimport './Main.css'\n\n\nfunction App() {\n\n\tconst [chosenDate, setChosenDate] = useState(new Date().toISOString().slice(0, 10))\n\tconst [tasks, setTasks] = useState([])\n\tconst [salaryCalcState, setSalaryCalcState] = useState(false)\n\n\tconst updateSalaryCalcState = () => setSalaryCalcState(!salaryCalcState)\n\n\treturn (\n\t\t<div className='main-wrap'>\n\t\t\t<header className='main-header'>\n\t\t\t\t<DatePicker chosenDate={chosenDate} setChosenDate={setChosenDate} />\n\n\t\t\t\t<button\n\t\t\t\t\tclassName='salary-calc-show-btn'\n\t\t\t\t\tonClick={updateSalaryCalcState}>\n\t\t\t\t\tРозрахувати зарплату\n\t\t\t\t</button>\n\n\t\t\t\t{salaryCalcState && <SalaryCalc tasks={tasks} close={updateSalaryCalcState} />}\n\t\t\t</header>\n\t\t\t<List tasks={tasks} setTasks={setTasks} chosenDate={chosenDate} />\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/Main/Main'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}